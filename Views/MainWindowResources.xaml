<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vw="clr-namespace:SprzetKomputerowy.Views"
                    xmlns:vm="clr-namespace:SprzetKomputerowy.ViewModels">

    <DataTemplate DataType="{x:Type vm:NoweUrzadzenieViewModel}">
        <vw:NoweUrzadzenie/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyKomputerViewModel}">
        <vw:NowyKomputerView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyZestawViewModel}">
        <vw:NowyZestawView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyDzialViewModel}">
        <vw:NowyDzialView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NoweUrzadzenieWeWyViewModel}">
        <vw:NoweUrzadzenieWeWy/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyStanTechnicznyViewModel}">
        <vw:NowyStanTechnicznyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaOsobaViewModel}">
        <vw:NowaOsobaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieKomputeryViewModel}">
        <vw:WszystkieKomputeryView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowePodzespolyViewModel}">
        <vw:NowePodzespolyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaLokalizacjaViewModel}">
        <vw:NowaLokalizacjaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaKategoriaKomputeraViewModel}">
        <vw:NowaKategoriaKomputeraView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaKategoriaUrzadzeniaViewModel}">
        <vw:NawaKategoriaUrzadzenia/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieZestawyViewModel}">
        <vw:WszystkieZestawy />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieUrzadzeniaViewModel}">
        <vw:WszystkieUrzadzeniaView/>
    </DataTemplate>

    <!-- Style RowDefinition -->
    <Style x:Key="RowDefinitionZwykly" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="28"/>
    </Style>
    <!--Koniec styli RowDefinition-->

    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
            Background="Black" 
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        <TextBlock 
              FontSize="14"
              FontWeight="Bold"
              Foreground="White" 
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Margin="2,6">
            <Hyperlink Command="{Binding Path=Command}">
              <TextBlock Text="{Binding Path=DisplayName}" Background="White" />
            </Hyperlink>
          </TextBlock>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
       <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>
</ResourceDictionary>